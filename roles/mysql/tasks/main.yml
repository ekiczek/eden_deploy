---
# Run Debian-specific tasks
-  import_tasks: debian.yml
   when: ansible_distribution == "Debian" # Doesn't include Ubuntu (ansible_os_family does))

- name: Create symbolic link
  file: path=/usr/share/phpmyadmin dest=/var/www/phpmyadmin
  become: yes
  when: web_server == "cherokee"

- name: Editing my.cnf
  lineinfile: dest=/etc/mysql/my.cnf
              regexp="{{ item.regexp }}"
              backrefs=yes
              line="{{ item.line }}"
              state=present
  become: yes
  loop:
    - { regexp: '^query_cache_size        = 16M', line: 'query_cache_size = 1M' }
    - { regexp: '^key_buffer              = 16M', line: 'key_buffer = 1M' }
    - { regexp: 'max_allowed_packet      = 16M', line: 'max_allowed_packet = 1M' }

- name: Restarting MySQL
  service: name=mysql state=restarted
  become: yes

- name: Copy backup script
  copy: src=backup dest=/usr/local/bin/backup mode=755
  become: yes

- name: Copy clean script
  copy: src=clean dest=/usr/local/bin/clean mode=755
  become: yes

- name: Copy my.cnf for root user
  template: src=my.cnf dest=/root/.my.cnf owner=root mode=600
  become: yes

- name: Create Database (Prod)
  mysql_db: name=sahana state=present
  become: yes

- name: Create Database (Demo / Test)
  mysql_db: name=sahana-{{ type }} state=present
  become: yes
  when: type != 'prod'
  tags:
    - demo
    - test

- name: Create sahana db user
  mysql_user: "name=sahana password={{ password }} priv=*.*:ALL host=localhost state=present"
  become: yes

- name: Configure Eden to access Database (Common)
  lineinfile: dest=/home/{{ type }}/applications/{{ appname }}/models/000_config.py
              regexp="{{ item.regexp }}"
              backrefs=yes
              line="{{ item.line }}"
              state=present
  become: yes
  loop:
    - { regexp: '^#settings.database.db_type = \"mysql\"', line: 'settings.database.db_type = "mysql"' }
    - { regexp: '^#settings.database.host = \"localhost\"', line: 'settings.database.db_type = "{{ db_ip }}"' }
    - { regexp: '^#settings.database.password = \"password\"', line: 'settings.database.password = "{{ password }}"' }
    - { regexp: '^settings.base.migrate = False', line: 'settings.base.migrate = True' }
  tags:
    - demo

- name: Configure Eden to access Database (Demo / Test)
  lineinfile: dest=/home/{{ type }}/applications/{{ appname }}/models/000_config.py
              regexp="{{ item.regexp }}"
              backrefs=yes
              line="{{ item.line }}"
              state=present
  become: yes
  loop:
    - { regexp: '^#settings.database.database = \"sahana\"', line: 'settings.database.database = "sahana-{{ type }}"' }
  when: type != 'prod'
  tags:
    - demo
    - test