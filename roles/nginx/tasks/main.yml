---
# @ToDo: Split-off Debian-specific parts
- name: Install nginx
  apt: name=nginx state=present

- name: Install certbot's nginx plugin (Debian 8 or 9)
  apt: name=python-certbot-nginx state=present
  default_release: "{{ ansible_distribution_release }}-backports"
  when: (ansible_distribution_major_version == '8') or 
        (ansible_distribution_major_version == '9')

- name: Install certbot's nginx plugin (Debian 10)
  apt: name=python-certbot-nginx state=present
  when: ansible_distribution_major_version == '10'

# @ToDo: Handle Manual SSL certificates
#        (currently we only handle Let's Encrypt free/automatic DV certificates)
# NB Use --staging when developing
- name: Use Certbot to request an SSL certificate (Prod)
  command: certbot --nginx -n --agree-tos --email webmaster@{{ sitename }} -d {{ sitename }}
  become: yes

- name: Use Certbot to request an SSL certificate (post-Prod)
  # We can use the production site's webserver configuration to allow validation
  command: certbot --nginx -n --expand -d {{ all_sites }}
  become: yes
  when: type != 'prod'
  tags:
    - test
    - demo
    - setup

- name: Deleting default configuration
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent

- name: Creating configuration
  template: src=conf.j2 dest=/etc/nginx/sites-enabled/{{ type }}.conf
  tags:
    - test
    - demo
    - setup

- name: Restart nginx
  service: name=nginx state=restarted
  tags:
    - test
    - demo
    - setup
